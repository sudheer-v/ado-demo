trigger:
- master

resources:
- repo: self

pool:
  name: 'Azure Pipelines'

stages:
- stage: SyntaxCheck
  jobs:
  - job: SyntaxCheck
    steps:
      - script: |
          apt-get update
          pip3 install pre-commit
          pre-commit run -a
- stage: ConfigCheck
  jobs:
  - job: CheckovScan
    steps:
      - script: |
          apt-get update
          pip3 install checkov 
          checkov --output cli
- stage: DockerBuild
  jobs:
  - job: Build 
    steps: 
      - script: |
          echo "##vso[task.setvariable variable=COMMIT_ID]`git rev-parse --short HEAD`"
      - task: Docker@2
        inputs:
          command: build 
          repository: ado-cicd-demo/sample-app
          Dockerfile: Dockerfile
          tags: $(COMMIT_ID)
      - task: Docker@2
        inputs:
          command: save
          arguments: --output $(Build.ArtifactStagingDirectory)/sample-app.tar ado-cicd-demo/sample-app:$(COMMIT_ID)
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: $(Build.ArtifactStagingDirectory)

- stage: Scan
  jobs: 
  - job: Scan
    steps:
      - script: |
          echo "##vso[task.setvariable variable=COMMIT_ID]`git rev-parse --short HEAD`"
      - task: DownloadBuildArtifacts@1
        inputs:
          artifactName: drop
      - task: Docker@2
        inputs:
          command: load 
          arguments: --input $(System.ArtifactsDirectory)/drop/sample-app.tar
      - script: |
           sudo apt-get install wget apt-transport-https gnupg lsb-release
           wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
           echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
           sudo apt-get update
           sudo apt-get install trivy
           trivy image ado-cicd-demo/sample-app:$(COMMIT_ID)
- stage: SignAndPush
  jobs: 
  - job: SignAndPush
    steps:
      - script: |
          echo "##vso[task.setvariable variable=COMMIT_ID]`git rev-parse --short HEAD`"
      - task: DownloadBuildArtifacts@1
        inputs:
          artifactName: drop
      - task: Docker@2
        inputs:
          command: load 
          arguments: --input $(System.ArtifactsDirectory)/drop/sample-app.tar
      - task: Docker@2
        inputs:
          command: push 
          repository: ado-cicd-demo/sample-app
          containerRegistry: devops-counsel-docker-registry
          tags: |
            $(COMMIT_ID)
